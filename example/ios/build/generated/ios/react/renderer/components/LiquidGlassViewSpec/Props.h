
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsH.js
 */
#pragma once

#include <react/renderer/components/view/ViewProps.h>
#include <react/renderer/core/PropsParserContext.h>

namespace facebook::react {

enum class LiquidGlassViewAppearance { Light, Dark, Default };

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, LiquidGlassViewAppearance &result) {
  auto string = (std::string)value;
  if (string == "light") { result = LiquidGlassViewAppearance::Light; return; }
  if (string == "dark") { result = LiquidGlassViewAppearance::Dark; return; }
  if (string == "default") { result = LiquidGlassViewAppearance::Default; return; }
  abort();
}

static inline std::string toString(const LiquidGlassViewAppearance &value) {
  switch (value) {
    case LiquidGlassViewAppearance::Light: return "light";
    case LiquidGlassViewAppearance::Dark: return "dark";
    case LiquidGlassViewAppearance::Default: return "default";
  }
}

class LiquidGlassViewProps final : public ViewProps {
 public:
  LiquidGlassViewProps() = default;
  LiquidGlassViewProps(const PropsParserContext& context, const LiquidGlassViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  std::string tintColor{};
  bool isInteractive{false};
  LiquidGlassViewAppearance appearance{LiquidGlassViewAppearance::Default};
  bool useNative{true};
};

} // namespace facebook::react
